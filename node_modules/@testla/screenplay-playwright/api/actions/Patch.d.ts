import { Actor } from '@testla/screenplay';
import { Headers, Response, ResponseBodyFormat } from '../types';
import { ARequest } from './ARequest';
/**
 * Action Class. Send a HTTP PATCH Request.
 */
export declare class Patch extends ARequest {
    private url;
    private data?;
    private responseBodyFormat;
    private constructor();
    /**
     * Send a HTTP PATCH request to the specified url.
     *
     * @param {Actor} actor the actor executes the request
     * @return {Response} the response
     */
    performAs(actor: Actor): Promise<Response>;
    /**
     * Send a HTTP PATCH request to the specified url.
     *
     * @param {string} url the URL of the target.
     * @return {Patch} the new instance
     */
    static to(url: string): Patch;
    /**
     * Add data to the HTTP PATCH request to send.
     * PATCH requests bodies hold partial updates of the entities to be updated.
     *
     * @param {any} data the data.
     * @return {Patch} this instance
     */
    withData(data: any): Patch;
    /**
     * Add headers to the HTTP PATCH request to send.
     *
     * @param {Headers} headers the headers.
     * @return {Patch} this instance
     */
    withHeaders(headers: Headers): Patch;
    /**
     * Set the format the response body should be returned as.
     *
     * @param {ResponseBodyFormat} responseBodyFormat the format of the response body.
     * @return {Patch} this instance
     */
    withResponseBodyFormat(responseBodyFormat: ResponseBodyFormat): Patch;
}
