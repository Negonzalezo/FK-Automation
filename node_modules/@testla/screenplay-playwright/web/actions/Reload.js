"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Reload = void 0;
const screenplay_1 = require("@testla/screenplay");
const BrowseTheWeb_1 = require("../abilities/BrowseTheWeb");
class Reload extends screenplay_1.Action {
    // eslint-disable-next-line
    performAs(actor) {
        return __awaiter(this, void 0, void 0, function* () {
            const page = BrowseTheWeb_1.BrowseTheWeb.as(actor, this.abilityAlias).getPage();
            return page.reload();
        });
    }
    /**
     * Reload the current browser page.
     */
    static page() {
        const instance = new Reload();
        instance.setCallStackInitializeCalledWith({});
        return instance;
    }
}
exports.Reload = Reload;
