"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.STRUCTURED_LOGS_ENVVAR_NAME = exports.EXEC_STATUS = exports.ACTIVITY_TYPE = exports.testlaScreenplayEventEmitter = exports.Question = exports.Task = exports.Action = exports.Ability = exports.Actor = void 0;
const Actor_1 = require("./screenplay/Actor");
Object.defineProperty(exports, "Actor", { enumerable: true, get: function () { return Actor_1.Actor; } });
const Ability_1 = require("./screenplay/Ability");
Object.defineProperty(exports, "Ability", { enumerable: true, get: function () { return Ability_1.Ability; } });
const Action_1 = require("./screenplay/Action");
Object.defineProperty(exports, "Action", { enumerable: true, get: function () { return Action_1.Action; } });
const Task_1 = require("./screenplay/Task");
Object.defineProperty(exports, "Task", { enumerable: true, get: function () { return Task_1.Task; } });
const Question_1 = require("./screenplay/Question");
Object.defineProperty(exports, "Question", { enumerable: true, get: function () { return Question_1.Question; } });
const event_emitter_1 = __importDefault(require("./utils/event-emitter"));
exports.testlaScreenplayEventEmitter = event_emitter_1.default;
const print_1 = require("./utils/print");
const constants_1 = require("./constants");
Object.defineProperty(exports, "ACTIVITY_TYPE", { enumerable: true, get: function () { return constants_1.ACTIVITY_TYPE; } });
Object.defineProperty(exports, "EXEC_STATUS", { enumerable: true, get: function () { return constants_1.EXEC_STATUS; } });
Object.defineProperty(exports, "STRUCTURED_LOGS_ENVVAR_NAME", { enumerable: true, get: function () { return constants_1.STRUCTURED_LOGS_ENVVAR_NAME; } });
__exportStar(require("./utils/event"), exports);
// register printing logs to stdout if applicable
if (
// regular formatted console debug logs
((_a = process.env.DEBUG) === null || _a === void 0 ? void 0 : _a.includes(constants_1.LOGGING_IDENTIFIER))
    // structured logs to be caught for parsing i.e. for playewright reporter
    || process.env[constants_1.STRUCTURED_LOGS_ENVVAR_NAME] === 'true') {
    event_emitter_1.default.on('logEvent', (event) => {
        var _a;
        if ((_a = process.env.DEBUG) === null || _a === void 0 ? void 0 : _a.includes(constants_1.LOGGING_IDENTIFIER)) {
            (0, print_1.printLogEventToStdout)(event);
        }
        if (process.env[constants_1.STRUCTURED_LOGS_ENVVAR_NAME] === 'true') {
            (0, print_1.printLogEventToStdout)(event, true);
        }
    });
}
